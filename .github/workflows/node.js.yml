# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on: [push, pull_request]

jobs:
  client:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: client/package-lock.json

    # Install dependencies in the client directory
    - name: Install client dependencies
      run: npm ci
      working-directory: client

    # Build the client application
    - name: Build client
      run: npm run build --if-present
      working-directory: client

    # Test the client application
    - name: Test client
      run: npm test
      working-directory: client

  server:
    runs-on: ubuntu-latest

    env:
      GITHUB_CLIENT_ID: ${{ secrets.GHUB_CLIENT_ID }}
      GITHUB_CLIENT_SECRET: ${{ secrets.GHUB_CLIENT_SECRET }}
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      SESSION_SECRET: ${{ secrets.SESSION_SECRET }}

    services:
      mongodb:
        image: mongo
        ports:
          - 27017:27017
        options: '--health-cmd "mongosh --eval \"db.runCommand({ ping: 1 })\"" --health-interval 10s --health-timeout 5s --health-retries 5'

    strategy:
      matrix:
        node-version: [16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: server/package-lock.json

    # Install dependencies in the server directory
    - name: Install server dependencies
      run: npm ci
      working-directory: server

    # Optionally, build the server if needed
    - name: Build server
      run: npm run build --if-present
      working-directory: server

    # Test the server application
    - name: Test server
      run: npm test
      working-directory: server
